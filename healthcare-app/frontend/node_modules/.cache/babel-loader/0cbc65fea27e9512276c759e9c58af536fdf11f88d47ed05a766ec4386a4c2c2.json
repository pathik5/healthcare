{"ast":null,"code":"var _jsxFileName = \"/Users/pathik/Desktop/personal-finance-app/healthcare/healthcare-app/frontend/src/pages/SymptomChecker.js\";\nimport React from 'react';\nimport { Chatbot } from 'react-chatbot-kit';\nimport \"../assets/styles/SymptomChecker.css\";\n\n// A more extensive symptom-to-remedy mapping\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst symptomRemedies = {\n  fever: \"You should rest and stay hydrated. Consider taking paracetamol.\",\n  headache: \"Try to rest in a dark room, hydrate, and consider taking an analgesic.\",\n  cough: \"You may try drinking warm tea with honey and rest. If symptoms persist, consult a doctor.\",\n  fatigue: \"Ensure you're getting enough rest and eating balanced meals. If persistent, consult a healthcare professional.\"\n};\nconst SymptomChecker = () => {\n  const config = {\n    initialMessages: [{\n      text: \"How can I assist you with your symptoms?\"\n    }],\n    botName: \"HealthBot\",\n    customStyles: {\n      botMessageBox: {\n        backgroundColor: '#4CAF50'\n      },\n      // Custom color for the bot's message box\n      chatButton: {\n        backgroundColor: '#4CAF50'\n      } // Custom color for the chat button\n    }\n  };\n  const messageParser = message => {\n    // Convert message to lowercase and check for matching symptoms\n    const lowerCaseMessage = message.toLowerCase();\n\n    // Check if any symptom matches the message\n    for (let symptom in symptomRemedies) {\n      if (lowerCaseMessage.includes(symptom)) {\n        return symptomRemedies[symptom];\n      }\n    }\n\n    // If no match is found, return a generic response\n    return \"I am sorry, I couldn't find a remedy for that. Please consult a healthcare provider.\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"symptom-checker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Symptom Checker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chatbot, {\n      config: config,\n      messageParser: messageParser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = SymptomChecker;\nexport default SymptomChecker;\nvar _c;\n$RefreshReg$(_c, \"SymptomChecker\");","map":{"version":3,"names":["React","Chatbot","jsxDEV","_jsxDEV","symptomRemedies","fever","headache","cough","fatigue","SymptomChecker","config","initialMessages","text","botName","customStyles","botMessageBox","backgroundColor","chatButton","messageParser","message","lowerCaseMessage","toLowerCase","symptom","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pathik/Desktop/personal-finance-app/healthcare/healthcare-app/frontend/src/pages/SymptomChecker.js"],"sourcesContent":["import React from 'react';\nimport { Chatbot } from 'react-chatbot-kit';\nimport \"../assets/styles/SymptomChecker.css\";\n\n// A more extensive symptom-to-remedy mapping\nconst symptomRemedies = {\n  fever: \"You should rest and stay hydrated. Consider taking paracetamol.\",\n  headache: \"Try to rest in a dark room, hydrate, and consider taking an analgesic.\",\n  cough: \"You may try drinking warm tea with honey and rest. If symptoms persist, consult a doctor.\",\n  fatigue: \"Ensure you're getting enough rest and eating balanced meals. If persistent, consult a healthcare professional.\",\n};\n\nconst SymptomChecker = () => {\n  const config = {\n    initialMessages: [{ text: \"How can I assist you with your symptoms?\" }],\n    botName: \"HealthBot\",\n    customStyles: {\n      botMessageBox: { backgroundColor: '#4CAF50' }, // Custom color for the bot's message box\n      chatButton: { backgroundColor: '#4CAF50' },  // Custom color for the chat button\n    },\n  };\n\n  const messageParser = (message) => {\n    // Convert message to lowercase and check for matching symptoms\n    const lowerCaseMessage = message.toLowerCase();\n    \n    // Check if any symptom matches the message\n    for (let symptom in symptomRemedies) {\n      if (lowerCaseMessage.includes(symptom)) {\n        return symptomRemedies[symptom];\n      }\n    }\n\n    // If no match is found, return a generic response\n    return \"I am sorry, I couldn't find a remedy for that. Please consult a healthcare provider.\";\n  };\n\n  return (\n    <div className=\"symptom-checker\">\n      <h2>Symptom Checker</h2>\n      <Chatbot config={config} messageParser={messageParser} />\n    </div>\n  );\n};\n\nexport default SymptomChecker;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,OAAO,qCAAqC;;AAE5C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAG;EACtBC,KAAK,EAAE,iEAAiE;EACxEC,QAAQ,EAAE,wEAAwE;EAClFC,KAAK,EAAE,2FAA2F;EAClGC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,MAAM,GAAG;IACbC,eAAe,EAAE,CAAC;MAAEC,IAAI,EAAE;IAA2C,CAAC,CAAC;IACvEC,OAAO,EAAE,WAAW;IACpBC,YAAY,EAAE;MACZC,aAAa,EAAE;QAAEC,eAAe,EAAE;MAAU,CAAC;MAAE;MAC/CC,UAAU,EAAE;QAAED,eAAe,EAAE;MAAU,CAAC,CAAG;IAC/C;EACF,CAAC;EAED,MAAME,aAAa,GAAIC,OAAO,IAAK;IACjC;IACA,MAAMC,gBAAgB,GAAGD,OAAO,CAACE,WAAW,CAAC,CAAC;;IAE9C;IACA,KAAK,IAAIC,OAAO,IAAIlB,eAAe,EAAE;MACnC,IAAIgB,gBAAgB,CAACG,QAAQ,CAACD,OAAO,CAAC,EAAE;QACtC,OAAOlB,eAAe,CAACkB,OAAO,CAAC;MACjC;IACF;;IAEA;IACA,OAAO,sFAAsF;EAC/F,CAAC;EAED,oBACEnB,OAAA;IAAKqB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BtB,OAAA;MAAAsB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB1B,OAAA,CAACF,OAAO;MAACS,MAAM,EAAEA,MAAO;MAACQ,aAAa,EAAEA;IAAc;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACC,EAAA,GA/BIrB,cAAc;AAiCpB,eAAeA,cAAc;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}